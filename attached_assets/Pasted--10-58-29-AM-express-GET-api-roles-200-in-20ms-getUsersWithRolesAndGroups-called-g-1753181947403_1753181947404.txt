}

10:58:29 AM [express] GET /api/roles 200 in 20ms

🔍 getUsersWithRolesAndGroups called

✅ getUsers found 2 users

✅ getUsers returned 2 users with roles and groups

📊 Base users found: 2

🔍 Processing user: Nicolas

🔍 Processing user: admin

📊 getUserWithRoles(nicolasvoignier_1753176398084): { userRoleDataLength: 0 }

📊 getUserWithRoles(admin_local): { userRoleDataLength: 0 }

📊 User Nicolas groups: 1

📊 User admin groups: 0

🔍 Final users with roles and groups: 2

🔐 API /api/users - Returning: { isArray: true, length: 2 }

👥 Users API response: { count: 2, requestingUser: 'admin' }

10:58:29 AM [express] GET /api/users 200 in 55ms

10:58:36 AM [express] GET /api/user 304 in 10ms

10:58:36 AM [express] GET /api/user 304 in 6ms

10:58:36 AM [express] GET /api/user 304 in 7ms

10:58:36 AM [express] GET /api/user 304 in 8ms

10:58:36 AM [express] GET /api/user 304 in 8ms

10:58:39 AM [express] GET /api/user 304 in 4ms

10:58:39 AM [express] GET /api/user 304 in 7ms

10:58:39 AM [express] GET /api/user 304 in 5ms

10:58:39 AM [express] GET /api/user 304 in 4ms

10:58:39 AM [express] GET /api/user 304 in 5ms

🔍 PRODUCTION AUTH DEBUG: {

  url: '/api/users/nicolasvoignier_1753176398084',

  method: 'DELETE',

  isAuthenticated: true,

  hasUser: true,

  userId: 'admin_local',

  username: 'admin',

  sessionId: 'glTpXRN0tX_FP5xnBE0PNV4C6VzO1FdW',

  hasSession: true,

  sessionData: [ 'cookie', 'passport' ],

  cookies: 'HAS_COOKIES'

}

✅ PRODUCTION AUTH: User authenticated, proceeding

10:58:41 AM [express] DELETE /api/users/nicolasvoignier_1753176398084 204 in 31ms

🔍 PRODUCTION AUTH DEBUG: {

  url: '/api/users',

  method: 'GET',

  isAuthenticated: true,

  hasUser: true,

  userId: 'admin_local',

  username: 'admin',

  sessionId: 'glTpXRN0tX_FP5xnBE0PNV4C6VzO1FdW',

  hasSession: true,

  sessionData: [ 'cookie', 'passport' ],

  cookies: 'HAS_COOKIES'

}

✅ PRODUCTION AUTH: User authenticated, proceeding

🔍 getUsersWithRolesAndGroups called

✅ getUsers found 1 users

✅ getUsers returned 1 users with roles and groups

📊 Base users found: 1

🔍 Processing user: admin

📊 getUserWithRoles(admin_local): { userRoleDataLength: 0 }

📊 User admin groups: 0

🔍 Final users with roles and groups: 1

🔐 API /api/users - Returning: { isArray: true, length: 1 }

👥 Users API response: { count: 1, requestingUser: 'admin' }

10:58:41 AM [express] GET /api/users 200 in 15ms

10:58:55 AM [express] HEAD /api/health 200 in 1ms

🔍 PRODUCTION AUTH DEBUG: {

  url: '/api/users',

  method: 'POST',

  isAuthenticated: true,

  hasUser: true,

  userId: 'admin_local',

  username: 'admin',

  sessionId: 'glTpXRN0tX_FP5xnBE0PNV4C6VzO1FdW',

  hasSession: true,

  sessionData: [ 'cookie', 'passport' ],

  cookies: 'HAS_COOKIES'

}

✅ PRODUCTION AUTH: User authenticated, proceeding

🔍 PERMISSION CHECK: users_create - Incoming request

🔍 PERMISSION CHECK: req.user exists: true

🔍 PERMISSION CHECK: req.user.claims: undefined

🔍 PERMISSION CHECK: req.user.id: admin_local

🔍 PERMISSION CHECK: Checking permission "users_create" for user admin_local

🔍 [PERMISSION CHECK] Checking "users_create" for user admin_local

🔍 [PERMISSION CHECK] Storage mode: PRODUCTION

🔍 [PERMISSION CHECK] User found: admin with role: admin

✅ [PERMISSION CHECK] User admin_local is admin - permission granted

✅ PERMISSION GRANTED: users_create for user admin_local

📝 POST /api/users - Request body: {

  email: 'admin',

  firstName: '',

  lastName: '',

  username: 'Directeur',

  password: 'directeur',

  role: 'directeur',

  id: 'admin_1753181934852'

}

10:58:57 AM [express] POST /api/users 400 in 7ms


      
      
    