sessionData: [ 'cookie', 'passport' ],

  cookies: 'HAS_COOKIES'

}

✅ PRODUCTION AUTH: User authenticated, proceeding

📝 PUT /api/users/:id - Request body: { username: 'Nicolas', password: 'N@ncydif' }

📝 User ID from params: _1753182518439

✅ Found user to update: Nicolas

📝 Cleaned user data: { username: 'Nicolas', password: 'N@ncydif' }

🔄 updateUser called: {

  id: '_1753182518439',

  userData: { username: 'Nicolas', password: 'N@ncydif' }

}

✅ User found: Nicolas

📝 SQL Query: UPDATE users SET username = $1, password = $2, password_changed = $3, updated_at = CURRENT_TIMESTAMP WHERE id = $4

📝 SQL Values: [

  'Nicolas',

  '331703198ca12f31e8bb237aad78fd80:4d32ab4c58bb2e1266c2df51796e4b2ee5f2d393cf16e5995848cf6ddd4edfcb031b2279bdeac6a74dbc52a65298ecda11aab90920f9f004efdb0035232ff5ef',

  true,

  '_1753182518439'

]

✅ updateUser success: {

  id: '_1753182518439',

  fieldsUpdated: 3,

  updatedUser: {

    id: '_1753182518439',

    username: 'Nicolas',

    email: null,

    name: ' ',

    first_name: '',

    last_name: '',

    profile_image_url: null,

    password: '331703198ca12f31e8bb237aad78fd80:4d32ab4c58bb2e1266c2df51796e4b2ee5f2d393cf16e5995848cf6ddd4edfcb031b2279bdeac6a74dbc52a65298ecda11aab90920f9f004efdb0035232ff5ef',

    role: 'directeur',

    password_changed: true,

    created_at: 2025-07-22T11:08:41.039Z,

    updated_at: 2025-07-22T11:30:34.917Z

  }

}

✅ User updated successfully: { id: '_1753182518439', updatedFields: [ 'username', 'password' ] }

11:30:34 AM [express] PUT /api/users/_1753182518439 200 in 104ms

🔍 PRODUCTION AUTH DEBUG: {

  url: '/api/users',

  method: 'GET',

  isAuthenticated: true,

  hasUser: true,

  userId: 'admin_local',

  username: 'admin',

  sessionId: '8L7SVV88rv2yaWF28KKp7EPXJ1TB3FN8',

  hasSession: true,

  sessionData: [ 'cookie', 'passport' ],

  cookies: 'HAS_COOKIES'

}

✅ PRODUCTION AUTH: User authenticated, proceeding

🔍 getUsersWithRolesAndGroups called

✅ getUsers found 2 users

✅ getUsers returned 2 users with roles and groups

📊 Base users found: 2

🔍 Processing user: Nicolas

🔍 Processing user: admin

📊 getUserWithRoles(admin_local): { userRoleDataLength: 0 }

📊 getUserWithRoles(_1753182518439): { userRoleDataLength: 0 }

📊 User admin groups: 0

📊 User Nicolas groups: 0

🔍 Final users with roles and groups: 2

🔐 API /api/users - Returning: { isArray: true, length: 2 }

👥 Users API response: { count: 2, requestingUser: 'admin' }

11:30:34 AM [express] GET /api/users 200 in 16ms

🔍 PRODUCTION AUTH DEBUG: {

  url: '/api/users',

  method: 'GET',

  isAuthenticated: true,

  hasUser: true,

  userId: 'admin_local',

  username: 'admin',

  sessionId: '8L7SVV88rv2yaWF28KKp7EPXJ1TB3FN8',

  hasSession: true,

  sessionData: [ 'cookie', 'passport' ],

  cookies: 'HAS_COOKIES'

}

✅ PRODUCTION AUTH: User authenticated, proceeding

🔍 getUsersWithRolesAndGroups called

✅ getUsers found 2 users

✅ getUsers returned 2 users with roles and groups

📊 Base users found: 2

🔍 Processing user: Nicolas

🔍 Processing user: admin

📊 getUserWithRoles(_1753182518439): { userRoleDataLength: 0 }

📊 getUserWithRoles(admin_local): { userRoleDataLength: 0 }

📊 User Nicolas groups: 0

📊 User admin groups: 0

🔍 Final users with roles and groups: 2

🔐 API /api/users - Returning: { isArray: true, length: 2 }

👥 Users API response: { count: 2, requestingUser: 'admin' }

11:30:35 AM [express] GET /api/users 304 in 24ms

11:30:38 AM [express] POST /api/logout 200 in 5ms

📍 Serving index.html for path: /auth

11:30:38 AM [express] GET /api/user 401 in 1ms

11:30:38 AM [express] GET /api/default-credentials-check 304 in 1ms

11:30:56 AM [express] HEAD /api/health 200 in 1ms


      
      
    